<Luke Poutney>
GUID: 2314348p
Date: 03/12/20

Haskell is a very powerful language with a lot to offer. For this task it allowed for a very concise solution to scrape the number of professors (using the Scalpel library) when compared with other languages and their scraping libraries (having used Scrapy/python in the past). The higher order functions are responsible for this as it considerably shortens the required code to complete the task.
While I see this concise nature to be a benefit now that I have made some use of it, it also made the earlier stages of learning the language very difficult. In a language that requires for the programmer to type more code to do the same work compared to Haskell (like python), I intuitively begin to understand concepts quicker because of the frequency at which I retype code.
Code readability and bug fixing is a similar case. Whilst I understand intended purpose of code easily at first (due to the type signatures and the intuitive names of the higher order functions), I find that for tasks such as debugging the lack of code can create a difficult experience. It is often hard to know where in a function the error is occurring as you cannot directly see the code within the functions. Over time as I become more familiar with the language, I believe this will be less of an issue, but as someone new to the language it presents a steep learning curve.
Setting up stack to begin this project was straightforward after looking at the quick start guide. I really like that it installs dependencies on a project specific basis, as it removes the confusion that arises from missing a dependency because you already had it installed. The package names to add to the dependencies I found to be rather unintuitive at times, and hard to find online even in official documentation. This often stagnated my progress while I attempted to figure out the name of the package I was attempting to use.
Adapting to the functional programming style overall was a challenge, however I see its benefits for tasks such as for more linear tasks such as in the exercise. As this is a less well adopted method of programming, I also found tutorials arenâ€™t really present for a lot of what Haskell has to offer (something I often look to for help when documentation gets overwhelming).
Overall, I think Haskell is a great language, which can be very powerful in certain situations. The learning curve was very steep for me personally, but the more I used it the easier it became, and I noticed the conveniences it adds. I also enjoyed leaning Haskell due to a sense of pride I had due to its Glasgow origins. For tasks like scraping I will make use of Haskell in the future.

